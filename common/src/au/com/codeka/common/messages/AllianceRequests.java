// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.messages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class AllianceRequests extends Message {

  public static final List<AllianceRequest> DEFAULT_REQUESTS = Collections.emptyList();
  public static final String DEFAULT_CURSOR = "";

  @ProtoField(tag = 1, label = REPEATED)
  public final List<AllianceRequest> requests;

  @ProtoField(tag = 2, type = STRING)
  public final String cursor;

  public AllianceRequests(List<AllianceRequest> requests, String cursor) {
    this.requests = immutableCopyOf(requests);
    this.cursor = cursor;
  }

  private AllianceRequests(Builder builder) {
    this(builder.requests, builder.cursor);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AllianceRequests)) return false;
    AllianceRequests o = (AllianceRequests) other;
    return equals(requests, o.requests)
        && equals(cursor, o.cursor);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = requests != null ? requests.hashCode() : 1;
      result = result * 37 + (cursor != null ? cursor.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AllianceRequests> {

    public List<AllianceRequest> requests;
    public String cursor;

    public Builder() {
    }

    public Builder(AllianceRequests message) {
      super(message);
      if (message == null) return;
      this.requests = copyOf(message.requests);
      this.cursor = message.cursor;
    }

    public Builder requests(List<AllianceRequest> requests) {
      this.requests = checkForNulls(requests);
      return this;
    }

    public Builder cursor(String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public AllianceRequests build() {
      return new AllianceRequests(this);
    }
  }
}
