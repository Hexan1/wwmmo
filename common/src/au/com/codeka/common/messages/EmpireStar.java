// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.messages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;

/**
 *
 * An EmpireStar is an entry in a "virtual array" of stars that belong to the
 * empire, order by the name of the star.
 */
public final class EmpireStar extends Message {

  public static final Integer DEFAULT_INDEX = 0;

  @ProtoField(tag = 1)
  public final Star star;

  @ProtoField(tag = 2, type = INT32)
  public final Integer index;

  public EmpireStar(Star star, Integer index) {
    this.star = star;
    this.index = index;
  }

  private EmpireStar(Builder builder) {
    this(builder.star, builder.index);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EmpireStar)) return false;
    EmpireStar o = (EmpireStar) other;
    return equals(star, o.star)
        && equals(index, o.index);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = star != null ? star.hashCode() : 0;
      result = result * 37 + (index != null ? index.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<EmpireStar> {

    public Star star;
    public Integer index;

    public Builder() {
    }

    public Builder(EmpireStar message) {
      super(message);
      if (message == null) return;
      this.star = message.star;
      this.index = message.index;
    }

    public Builder star(Star star) {
      this.star = star;
      return this;
    }

    public Builder index(Integer index) {
      this.index = index;
      return this;
    }

    @Override
    public EmpireStar build() {
      return new EmpireStar(this);
    }
  }
}
