// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.messages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

/**
 *
 * A build queue is basically just a list of BuildRequests.
 */
public final class BuildQueue extends Message {

  public static final List<BuildRequest> DEFAULT_REQUESTS = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<BuildRequest> requests;

  public BuildQueue(List<BuildRequest> requests) {
    this.requests = immutableCopyOf(requests);
  }

  private BuildQueue(Builder builder) {
    this(builder.requests);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BuildQueue)) return false;
    return equals(requests, ((BuildQueue) other).requests);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = requests != null ? requests.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<BuildQueue> {

    public List<BuildRequest> requests;

    public Builder() {
    }

    public Builder(BuildQueue message) {
      super(message);
      if (message == null) return;
      this.requests = copyOf(message.requests);
    }

    public Builder requests(List<BuildRequest> requests) {
      this.requests = checkForNulls(requests);
      return this;
    }

    @Override
    public BuildQueue build() {
      return new BuildQueue(this);
    }
  }
}
