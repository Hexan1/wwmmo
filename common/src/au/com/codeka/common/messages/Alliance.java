// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.messages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 *
 * This is the main contains for alliances.
 */
public final class Alliance extends Message {

  public static final String DEFAULT_KEY = "";
  public static final String DEFAULT_NAME = "";
  public static final Long DEFAULT_TIME_CREATED = 0L;
  public static final String DEFAULT_CREATOR_EMPIRE_KEY = "";
  public static final Double DEFAULT_BANK_BALANCE = 0D;
  public static final Integer DEFAULT_NUM_MEMBERS = 0;
  public static final List<AllianceMember> DEFAULT_MEMBERS = Collections.emptyList();
  public static final Long DEFAULT_DATE_IMAGE_UPDATED = 0L;
  public static final Integer DEFAULT_NUM_PENDING_REQUESTS = 0;

  @ProtoField(tag = 1, type = STRING)
  public final String key;

  /**
   * The name of the alliance
   */
  @ProtoField(tag = 2, type = STRING)
  public final String name;

  /**
   * The time (in epoch form) the alliance was first created
   */
  @ProtoField(tag = 3, type = INT64)
  public final Long time_created;

  /**
   * The key of the empire that created this alliance
   */
  @ProtoField(tag = 4, type = STRING)
  public final String creator_empire_key;

  /**
   * If this is our own alliance, it'll have the bank balance
   */
  @ProtoField(tag = 7, type = DOUBLE)
  public final Double bank_balance;

  /**
   * The current number of members in the alliance
   */
  @ProtoField(tag = 5, type = INT32)
  public final Integer num_members;

  /**
   * If set, the actual collection of members
   */
  @ProtoField(tag = 6, label = REPEATED)
  public final List<AllianceMember> members;

  /**
   * The date the alliance's image was last changed (so we know if
   * we need to re-fetch a cached version).
   */
  @ProtoField(tag = 8, type = INT64)
  public final Long date_image_updated;

  /**
   * Only for our own alliance, this'll be the number of pending requests
   * we have waiting for us.
   */
  @ProtoField(tag = 9, type = INT32)
  public final Integer num_pending_requests;

  public Alliance(String key, String name, Long time_created, String creator_empire_key, Double bank_balance, Integer num_members, List<AllianceMember> members, Long date_image_updated, Integer num_pending_requests) {
    this.key = key;
    this.name = name;
    this.time_created = time_created;
    this.creator_empire_key = creator_empire_key;
    this.bank_balance = bank_balance;
    this.num_members = num_members;
    this.members = immutableCopyOf(members);
    this.date_image_updated = date_image_updated;
    this.num_pending_requests = num_pending_requests;
  }

  private Alliance(Builder builder) {
    this(builder.key, builder.name, builder.time_created, builder.creator_empire_key, builder.bank_balance, builder.num_members, builder.members, builder.date_image_updated, builder.num_pending_requests);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Alliance)) return false;
    Alliance o = (Alliance) other;
    return equals(key, o.key)
        && equals(name, o.name)
        && equals(time_created, o.time_created)
        && equals(creator_empire_key, o.creator_empire_key)
        && equals(bank_balance, o.bank_balance)
        && equals(num_members, o.num_members)
        && equals(members, o.members)
        && equals(date_image_updated, o.date_image_updated)
        && equals(num_pending_requests, o.num_pending_requests);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = key != null ? key.hashCode() : 0;
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (time_created != null ? time_created.hashCode() : 0);
      result = result * 37 + (creator_empire_key != null ? creator_empire_key.hashCode() : 0);
      result = result * 37 + (bank_balance != null ? bank_balance.hashCode() : 0);
      result = result * 37 + (num_members != null ? num_members.hashCode() : 0);
      result = result * 37 + (members != null ? members.hashCode() : 1);
      result = result * 37 + (date_image_updated != null ? date_image_updated.hashCode() : 0);
      result = result * 37 + (num_pending_requests != null ? num_pending_requests.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Alliance> {

    public String key;
    public String name;
    public Long time_created;
    public String creator_empire_key;
    public Double bank_balance;
    public Integer num_members;
    public List<AllianceMember> members;
    public Long date_image_updated;
    public Integer num_pending_requests;

    public Builder() {
    }

    public Builder(Alliance message) {
      super(message);
      if (message == null) return;
      this.key = message.key;
      this.name = message.name;
      this.time_created = message.time_created;
      this.creator_empire_key = message.creator_empire_key;
      this.bank_balance = message.bank_balance;
      this.num_members = message.num_members;
      this.members = copyOf(message.members);
      this.date_image_updated = message.date_image_updated;
      this.num_pending_requests = message.num_pending_requests;
    }

    public Builder key(String key) {
      this.key = key;
      return this;
    }

    /**
     * The name of the alliance
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * The time (in epoch form) the alliance was first created
     */
    public Builder time_created(Long time_created) {
      this.time_created = time_created;
      return this;
    }

    /**
     * The key of the empire that created this alliance
     */
    public Builder creator_empire_key(String creator_empire_key) {
      this.creator_empire_key = creator_empire_key;
      return this;
    }

    /**
     * If this is our own alliance, it'll have the bank balance
     */
    public Builder bank_balance(Double bank_balance) {
      this.bank_balance = bank_balance;
      return this;
    }

    /**
     * The current number of members in the alliance
     */
    public Builder num_members(Integer num_members) {
      this.num_members = num_members;
      return this;
    }

    /**
     * If set, the actual collection of members
     */
    public Builder members(List<AllianceMember> members) {
      this.members = checkForNulls(members);
      return this;
    }

    /**
     * The date the alliance's image was last changed (so we know if
     * we need to re-fetch a cached version).
     */
    public Builder date_image_updated(Long date_image_updated) {
      this.date_image_updated = date_image_updated;
      return this;
    }

    /**
     * Only for our own alliance, this'll be the number of pending requests
     * we have waiting for us.
     */
    public Builder num_pending_requests(Integer num_pending_requests) {
      this.num_pending_requests = num_pending_requests;
      return this;
    }

    @Override
    public Alliance build() {
      return new Alliance(this);
    }
  }
}
